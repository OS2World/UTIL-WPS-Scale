Name: 			SCALE
Descripcion: 		Displays a red, green, or bluescale
Date: 			2023-11-27
Version:		0.96
----------------------------  


DESCRIPTION
-----------
This is a simple program that draws a grayscale (or redscale, or
bluescale, or orangescale, or ...) using the palette manager. While
it's primarily intended to demonstrate how to use the palette manager
to get *exact* colors for drawing, it also works on systems that don't
have the palette manager. (Don't expect the display to be very pretty,
though!)

RUNNING THE PROGRAM
-------------------
First, though, the "syntax" for invoking this program is

   SCALE [-r#] [-g#] [-b#]

where items in []'s are optional flags, and # stands for a number from
0 to 255 inclusive. The flags specify the intensity of that primary component.
If a component is not specified, it defaults to zero. If *no* components
are specified, they *all* default to 255. (This is so that you get a
grayscale by default, rather than a "blackscale"!) You can use '/' instead
of '-' to specify the flags, and they can be in any order. (You can even
specify a component more than once, if you like; the rightmost specification
counts.)

Here are some examples:

   SCALE -r255
This draws a "redscale" with black on the left and bright red on the right.

   SCALE -g255
This draws a "greenscale."

   SCALE -b255 -r255
This draws a "magentascale" since magenta = blue + red.

   SCALE -r255 -g128
This draws an "orangescale" since orange = red + 1/2 green.

etc.

Now for some fun. Start up my PHYSCOLO, if you have it. Move it so that it
stretches wide but short, across the bottom of the screen. Then

1) Enter "foo" at the prompt. This will start up six (!) copies of SCALE.
2) Type CTRL-ESC. You will see the six copies of SCALE listed as
"Palette-Managed Color Scale." (If the words "Palette-Managed" aren't
there, your current screen driver doesn't support the Palette Manager!)
3) Select all the copies of SCALE. (Click on the top one listed, then
shift-click on the last one. Their names should all be highlighted.)
4) Tile all the copies of SCALE. (Right-click in the highlighted area,
then select "Tile.")

The six copies of SCALE should now take up all of the screen (except the
bottom, which is why you put PHYSCOLO there). Three of the copies of SCALE
will have nice, smooth scales; the others won't. This is because each
copy of SCALE requests 64 colors, and you don't have 384 colors! Two things
worth noticing:

a) If you click on a copy of SCALE that doesn't have a nice, smooth scale,
it'll get high priority and thus will be granted all the colors it requests.
However, one of the other copies of SCALE will have to lose colors. Click
on these windows and watch the colors get reshuffled.

b) The Palette Manager gives higher priority to low-numbered palette entries.
Thus, on the crude-looking copies of SCALE, you will likely see more shades
on the left than the right. Your programs should take advantage of this;
SCALE doesn't, to keep the code simple.

REQUIREMENTS
------------
- yum install git gcc make libc-devel binutils watcom-wrc watcom-wlink-hll

COMPILE INSTRUCTIONS
--------------------
This version of this sample was modified to compile on ArcaOS with GCC 9 compiler. 

1) Remember to have correct header files your path. For GCC the correct ones are the included on the "libc-devel", not the ones from the OS/2 Toolkit. Check your config.sys for "SET INCLUDE=C:\usr\include"

2) Since I'm using the Watcom Resource Compiler (open source) instead of the classic rc.exe, and the the Watcom Linker, intead of the classic ilink.exe, add to your config.sys...
 SET EMXOMFLD_LINKER=wl.exe
 SET EMXOMFLD_TYPE=WLINK
 SET EMXOMFLD_RC_TYPE=WRC
 SET EMXOMFLD_RC=wrc.exe

3) Run "make" or "make 2>&1 |tee make.out" to get the log file.


TOOLS USED
----------
- ArcaOS	- Verion 5.1
- wrc 		- Version 2.0beta1
- gcc		- gcc (GCC) 9.2.0 20190812 (OS/2 RPM build 9.2.0-5.oc00)
- make 		- Version 3.81 k2 (2017-11-10)

TROUBLESHOOT
------------
The compile produce will run by just executing make on the directory, but a compile.cmd file is includes to store the log in a file. If you want to save the log file you can run it as "nmake 2>&1 |tee make.out". The log will be saved into the "make.out" file.

HISTORY
---------- 
- 0.96 - 2023-11-27
Changed version to compile on gcc and to run on ArcaOS 5.1.0.

- 0.95
Original version.

LICENSE
-------
The 3-Clause BSD License.

AUTHORS
-------
- Martin Iturbide (2023)
- Raja Thiagarajan (1994)


